/* tslint:disable */
/* eslint-disable */
/**
 * AuthService API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuthResponse
 */
export interface AuthResponse {
    /**
     * 
     * @type {string}
     * @memberof AuthResponse
     */
    userId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AuthResponse
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AuthResponse
     */
    accessToken?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AuthResponse
     */
    refreshToken?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof AuthResponse
     */
    accessTokenExpiration?: Date;
}

/**
 * Check if a given object implements the AuthResponse interface.
 */
export function instanceOfAuthResponse(value: object): value is AuthResponse {
    return true;
}

export function AuthResponseFromJSON(json: any): AuthResponse {
    return AuthResponseFromJSONTyped(json, false);
}

export function AuthResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['userId'] == null ? undefined : json['userId'],
        'email': json['email'] == null ? undefined : json['email'],
        'accessToken': json['accessToken'] == null ? undefined : json['accessToken'],
        'refreshToken': json['refreshToken'] == null ? undefined : json['refreshToken'],
        'accessTokenExpiration': json['accessTokenExpiration'] == null ? undefined : (new Date(json['accessTokenExpiration'])),
    };
}

export function AuthResponseToJSON(json: any): AuthResponse {
    return AuthResponseToJSONTyped(json, false);
}

export function AuthResponseToJSONTyped(value?: AuthResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'userId': value['userId'],
        'email': value['email'],
        'accessToken': value['accessToken'],
        'refreshToken': value['refreshToken'],
        'accessTokenExpiration': value['accessTokenExpiration'] == null ? undefined : ((value['accessTokenExpiration']).toISOString()),
    };
}

