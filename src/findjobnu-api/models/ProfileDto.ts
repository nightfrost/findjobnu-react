/* tslint:disable */
/* eslint-disable */
/**
 * findjobnuAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SkillDto } from './SkillDto';
import {
    SkillDtoFromJSON,
    SkillDtoFromJSONTyped,
    SkillDtoToJSON,
    SkillDtoToJSONTyped,
} from './SkillDto';
import type { AccomplishmentDto } from './AccomplishmentDto';
import {
    AccomplishmentDtoFromJSON,
    AccomplishmentDtoFromJSONTyped,
    AccomplishmentDtoToJSON,
    AccomplishmentDtoToJSONTyped,
} from './AccomplishmentDto';
import type { BasicInfoDto } from './BasicInfoDto';
import {
    BasicInfoDtoFromJSON,
    BasicInfoDtoFromJSONTyped,
    BasicInfoDtoToJSON,
    BasicInfoDtoToJSONTyped,
} from './BasicInfoDto';
import type { ContactDto } from './ContactDto';
import {
    ContactDtoFromJSON,
    ContactDtoFromJSONTyped,
    ContactDtoToJSON,
    ContactDtoToJSONTyped,
} from './ContactDto';
import type { EducationDto } from './EducationDto';
import {
    EducationDtoFromJSON,
    EducationDtoFromJSONTyped,
    EducationDtoToJSON,
    EducationDtoToJSONTyped,
} from './EducationDto';
import type { ExperienceDto } from './ExperienceDto';
import {
    ExperienceDtoFromJSON,
    ExperienceDtoFromJSONTyped,
    ExperienceDtoToJSON,
    ExperienceDtoToJSONTyped,
} from './ExperienceDto';
import type { InterestDto } from './InterestDto';
import {
    InterestDtoFromJSON,
    InterestDtoFromJSONTyped,
    InterestDtoToJSON,
    InterestDtoToJSONTyped,
} from './InterestDto';

/**
 * 
 * @export
 * @interface ProfileDto
 */
export interface ProfileDto {
    /**
     * 
     * @type {number}
     * @memberof ProfileDto
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ProfileDto
     */
    userId?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof ProfileDto
     */
    lastUpdatedAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof ProfileDto
     */
    createdAt?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProfileDto
     */
    savedJobPosts?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProfileDto
     */
    keywords?: Array<string> | null;
    /**
     * 
     * @type {BasicInfoDto}
     * @memberof ProfileDto
     */
    basicInfo?: BasicInfoDto;
    /**
     * 
     * @type {Array<ExperienceDto>}
     * @memberof ProfileDto
     */
    experiences?: Array<ExperienceDto> | null;
    /**
     * 
     * @type {Array<EducationDto>}
     * @memberof ProfileDto
     */
    educations?: Array<EducationDto> | null;
    /**
     * 
     * @type {Array<InterestDto>}
     * @memberof ProfileDto
     */
    interests?: Array<InterestDto> | null;
    /**
     * 
     * @type {Array<AccomplishmentDto>}
     * @memberof ProfileDto
     */
    accomplishments?: Array<AccomplishmentDto> | null;
    /**
     * 
     * @type {Array<ContactDto>}
     * @memberof ProfileDto
     */
    contacts?: Array<ContactDto> | null;
    /**
     * 
     * @type {Array<SkillDto>}
     * @memberof ProfileDto
     */
    skills?: Array<SkillDto> | null;
}

/**
 * Check if a given object implements the ProfileDto interface.
 */
export function instanceOfProfileDto(value: object): value is ProfileDto {
    return true;
}

export function ProfileDtoFromJSON(json: any): ProfileDto {
    return ProfileDtoFromJSONTyped(json, false);
}

export function ProfileDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'lastUpdatedAt': json['lastUpdatedAt'] == null ? undefined : (new Date(json['lastUpdatedAt'])),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'savedJobPosts': json['savedJobPosts'] == null ? undefined : json['savedJobPosts'],
        'keywords': json['keywords'] == null ? undefined : json['keywords'],
        'basicInfo': json['basicInfo'] == null ? undefined : BasicInfoDtoFromJSON(json['basicInfo']),
        'experiences': json['experiences'] == null ? undefined : ((json['experiences'] as Array<any>).map(ExperienceDtoFromJSON)),
        'educations': json['educations'] == null ? undefined : ((json['educations'] as Array<any>).map(EducationDtoFromJSON)),
        'interests': json['interests'] == null ? undefined : ((json['interests'] as Array<any>).map(InterestDtoFromJSON)),
        'accomplishments': json['accomplishments'] == null ? undefined : ((json['accomplishments'] as Array<any>).map(AccomplishmentDtoFromJSON)),
        'contacts': json['contacts'] == null ? undefined : ((json['contacts'] as Array<any>).map(ContactDtoFromJSON)),
        'skills': json['skills'] == null ? undefined : ((json['skills'] as Array<any>).map(SkillDtoFromJSON)),
    };
}

export function ProfileDtoToJSON(json: any): ProfileDto {
    return ProfileDtoToJSONTyped(json, false);
}

export function ProfileDtoToJSONTyped(value?: ProfileDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'userId': value['userId'],
        'lastUpdatedAt': value['lastUpdatedAt'] == null ? undefined : ((value['lastUpdatedAt'] as any).toISOString()),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'savedJobPosts': value['savedJobPosts'],
        'keywords': value['keywords'],
        'basicInfo': BasicInfoDtoToJSON(value['basicInfo']),
        'experiences': value['experiences'] == null ? undefined : ((value['experiences'] as Array<any>).map(ExperienceDtoToJSON)),
        'educations': value['educations'] == null ? undefined : ((value['educations'] as Array<any>).map(EducationDtoToJSON)),
        'interests': value['interests'] == null ? undefined : ((value['interests'] as Array<any>).map(InterestDtoToJSON)),
        'accomplishments': value['accomplishments'] == null ? undefined : ((value['accomplishments'] as Array<any>).map(AccomplishmentDtoToJSON)),
        'contacts': value['contacts'] == null ? undefined : ((value['contacts'] as Array<any>).map(ContactDtoToJSON)),
        'skills': value['skills'] == null ? undefined : ((value['skills'] as Array<any>).map(SkillDtoToJSON)),
    };
}

