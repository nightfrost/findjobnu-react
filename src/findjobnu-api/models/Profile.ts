/* tslint:disable */
/* eslint-disable */
/**
 * findjobnuAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Interest } from './Interest';
import {
    InterestFromJSON,
    InterestFromJSONTyped,
    InterestToJSON,
    InterestToJSONTyped,
} from './Interest';
import type { Experience } from './Experience';
import {
    ExperienceFromJSON,
    ExperienceFromJSONTyped,
    ExperienceToJSON,
    ExperienceToJSONTyped,
} from './Experience';
import type { Skill } from './Skill';
import {
    SkillFromJSON,
    SkillFromJSONTyped,
    SkillToJSON,
    SkillToJSONTyped,
} from './Skill';
import type { Accomplishment } from './Accomplishment';
import {
    AccomplishmentFromJSON,
    AccomplishmentFromJSONTyped,
    AccomplishmentToJSON,
    AccomplishmentToJSONTyped,
} from './Accomplishment';
import type { Education } from './Education';
import {
    EducationFromJSON,
    EducationFromJSONTyped,
    EducationToJSON,
    EducationToJSONTyped,
} from './Education';
import type { BasicInfo } from './BasicInfo';
import {
    BasicInfoFromJSON,
    BasicInfoFromJSONTyped,
    BasicInfoToJSON,
    BasicInfoToJSONTyped,
} from './BasicInfo';
import type { Contact } from './Contact';
import {
    ContactFromJSON,
    ContactFromJSONTyped,
    ContactToJSON,
    ContactToJSONTyped,
} from './Contact';

/**
 * 
 * @export
 * @interface Profile
 */
export interface Profile {
    /**
     * 
     * @type {number}
     * @memberof Profile
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    userId: string;
    /**
     * 
     * @type {Date}
     * @memberof Profile
     */
    lastUpdatedAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof Profile
     */
    createdAt?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof Profile
     */
    savedJobPosts?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof Profile
     */
    keywords?: Array<string> | null;
    /**
     * 
     * @type {BasicInfo}
     * @memberof Profile
     */
    basicInfo: BasicInfo;
    /**
     * 
     * @type {Array<Experience>}
     * @memberof Profile
     */
    experiences?: Array<Experience> | null;
    /**
     * 
     * @type {Array<Education>}
     * @memberof Profile
     */
    educations?: Array<Education> | null;
    /**
     * 
     * @type {Array<Interest>}
     * @memberof Profile
     */
    interests?: Array<Interest> | null;
    /**
     * 
     * @type {Array<Accomplishment>}
     * @memberof Profile
     */
    accomplishments?: Array<Accomplishment> | null;
    /**
     * 
     * @type {Array<Contact>}
     * @memberof Profile
     */
    contacts?: Array<Contact> | null;
    /**
     * 
     * @type {Array<Skill>}
     * @memberof Profile
     */
    skills?: Array<Skill> | null;
}

/**
 * Check if a given object implements the Profile interface.
 */
export function instanceOfProfile(value: object): value is Profile {
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('basicInfo' in value) || value['basicInfo'] === undefined) return false;
    return true;
}

export function ProfileFromJSON(json: any): Profile {
    return ProfileFromJSONTyped(json, false);
}

export function ProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): Profile {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'userId': json['userId'],
        'lastUpdatedAt': json['lastUpdatedAt'] == null ? undefined : (new Date(json['lastUpdatedAt'])),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'savedJobPosts': json['savedJobPosts'] == null ? undefined : json['savedJobPosts'],
        'keywords': json['keywords'] == null ? undefined : json['keywords'],
        'basicInfo': BasicInfoFromJSON(json['basicInfo']),
        'experiences': json['experiences'] == null ? undefined : ((json['experiences'] as Array<any>).map(ExperienceFromJSON)),
        'educations': json['educations'] == null ? undefined : ((json['educations'] as Array<any>).map(EducationFromJSON)),
        'interests': json['interests'] == null ? undefined : ((json['interests'] as Array<any>).map(InterestFromJSON)),
        'accomplishments': json['accomplishments'] == null ? undefined : ((json['accomplishments'] as Array<any>).map(AccomplishmentFromJSON)),
        'contacts': json['contacts'] == null ? undefined : ((json['contacts'] as Array<any>).map(ContactFromJSON)),
        'skills': json['skills'] == null ? undefined : ((json['skills'] as Array<any>).map(SkillFromJSON)),
    };
}

export function ProfileToJSON(json: any): Profile {
    return ProfileToJSONTyped(json, false);
}

export function ProfileToJSONTyped(value?: Profile | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'userId': value['userId'],
        'lastUpdatedAt': value['lastUpdatedAt'] == null ? undefined : ((value['lastUpdatedAt'] as any).toISOString()),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'savedJobPosts': value['savedJobPosts'],
        'keywords': value['keywords'],
        'basicInfo': BasicInfoToJSON(value['basicInfo']),
        'experiences': value['experiences'] == null ? undefined : ((value['experiences'] as Array<any>).map(ExperienceToJSON)),
        'educations': value['educations'] == null ? undefined : ((value['educations'] as Array<any>).map(EducationToJSON)),
        'interests': value['interests'] == null ? undefined : ((value['interests'] as Array<any>).map(InterestToJSON)),
        'accomplishments': value['accomplishments'] == null ? undefined : ((value['accomplishments'] as Array<any>).map(AccomplishmentToJSON)),
        'contacts': value['contacts'] == null ? undefined : ((value['contacts'] as Array<any>).map(ContactToJSON)),
        'skills': value['skills'] == null ? undefined : ((value['skills'] as Array<any>).map(SkillToJSON)),
    };
}

