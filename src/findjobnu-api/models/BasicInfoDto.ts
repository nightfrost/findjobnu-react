/* tslint:disable */
/* eslint-disable */
/**
 * findjobnuAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BasicInfoDto
 */
export interface BasicInfoDto {
    /**
     * 
     * @type {string}
     * @memberof BasicInfoDto
     */
    firstName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof BasicInfoDto
     */
    lastName?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof BasicInfoDto
     */
    dateOfBirth?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof BasicInfoDto
     */
    phoneNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof BasicInfoDto
     */
    about?: string | null;
    /**
     * 
     * @type {string}
     * @memberof BasicInfoDto
     */
    location?: string | null;
    /**
     * 
     * @type {string}
     * @memberof BasicInfoDto
     */
    company?: string | null;
    /**
     * 
     * @type {string}
     * @memberof BasicInfoDto
     */
    jobTitle?: string | null;
    /**
     * 
     * @type {string}
     * @memberof BasicInfoDto
     */
    linkedinUrl?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof BasicInfoDto
     */
    openToWork?: boolean;
}

/**
 * Check if a given object implements the BasicInfoDto interface.
 */
export function instanceOfBasicInfoDto(value: object): value is BasicInfoDto {
    return true;
}

export function BasicInfoDtoFromJSON(json: any): BasicInfoDto {
    return BasicInfoDtoFromJSONTyped(json, false);
}

export function BasicInfoDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BasicInfoDto {
    if (json == null) {
        return json;
    }
    return {
        
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'dateOfBirth': json['dateOfBirth'] == null ? undefined : (new Date(json['dateOfBirth'])),
        'phoneNumber': json['phoneNumber'] == null ? undefined : json['phoneNumber'],
        'about': json['about'] == null ? undefined : json['about'],
        'location': json['location'] == null ? undefined : json['location'],
        'company': json['company'] == null ? undefined : json['company'],
        'jobTitle': json['jobTitle'] == null ? undefined : json['jobTitle'],
        'linkedinUrl': json['linkedinUrl'] == null ? undefined : json['linkedinUrl'],
        'openToWork': json['openToWork'] == null ? undefined : json['openToWork'],
    };
}

export function BasicInfoDtoToJSON(json: any): BasicInfoDto {
    return BasicInfoDtoToJSONTyped(json, false);
}

export function BasicInfoDtoToJSONTyped(value?: BasicInfoDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'dateOfBirth': value['dateOfBirth'] == null ? undefined : ((value['dateOfBirth'] as any).toISOString()),
        'phoneNumber': value['phoneNumber'],
        'about': value['about'],
        'location': value['location'],
        'company': value['company'],
        'jobTitle': value['jobTitle'],
        'linkedinUrl': value['linkedinUrl'],
        'openToWork': value['openToWork'],
    };
}

