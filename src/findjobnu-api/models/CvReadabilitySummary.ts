/* tslint:disable */
/* eslint-disable */
/**
 * findjobnuAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CvReadabilitySummary
 */
export interface CvReadabilitySummary {
    /**
     * 
     * @type {number}
     * @memberof CvReadabilitySummary
     */
    totalChars?: number;
    /**
     * 
     * @type {number}
     * @memberof CvReadabilitySummary
     */
    totalWords?: number;
    /**
     * 
     * @type {number}
     * @memberof CvReadabilitySummary
     */
    totalLines?: number;
    /**
     * 
     * @type {boolean}
     * @memberof CvReadabilitySummary
     */
    hasEmail?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CvReadabilitySummary
     */
    hasPhone?: boolean;
    /**
     * 
     * @type {number}
     * @memberof CvReadabilitySummary
     */
    bulletCount?: number;
    /**
     * 
     * @type {number}
     * @memberof CvReadabilitySummary
     */
    matchedSections?: number;
    /**
     * 
     * @type {number}
     * @memberof CvReadabilitySummary
     */
    totalSectionKeywords?: number;
    /**
     * 
     * @type {string}
     * @memberof CvReadabilitySummary
     */
    note?: string | null;
}

/**
 * Check if a given object implements the CvReadabilitySummary interface.
 */
export function instanceOfCvReadabilitySummary(value: object): value is CvReadabilitySummary {
    return true;
}

export function CvReadabilitySummaryFromJSON(json: any): CvReadabilitySummary {
    return CvReadabilitySummaryFromJSONTyped(json, false);
}

export function CvReadabilitySummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CvReadabilitySummary {
    if (json == null) {
        return json;
    }
    return {
        
        'totalChars': json['totalChars'] == null ? undefined : json['totalChars'],
        'totalWords': json['totalWords'] == null ? undefined : json['totalWords'],
        'totalLines': json['totalLines'] == null ? undefined : json['totalLines'],
        'hasEmail': json['hasEmail'] == null ? undefined : json['hasEmail'],
        'hasPhone': json['hasPhone'] == null ? undefined : json['hasPhone'],
        'bulletCount': json['bulletCount'] == null ? undefined : json['bulletCount'],
        'matchedSections': json['matchedSections'] == null ? undefined : json['matchedSections'],
        'totalSectionKeywords': json['totalSectionKeywords'] == null ? undefined : json['totalSectionKeywords'],
        'note': json['note'] == null ? undefined : json['note'],
    };
}

export function CvReadabilitySummaryToJSON(json: any): CvReadabilitySummary {
    return CvReadabilitySummaryToJSONTyped(json, false);
}

export function CvReadabilitySummaryToJSONTyped(value?: CvReadabilitySummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'totalChars': value['totalChars'],
        'totalWords': value['totalWords'],
        'totalLines': value['totalLines'],
        'hasEmail': value['hasEmail'],
        'hasPhone': value['hasPhone'],
        'bulletCount': value['bulletCount'],
        'matchedSections': value['matchedSections'],
        'totalSectionKeywords': value['totalSectionKeywords'],
        'note': value['note'],
    };
}

