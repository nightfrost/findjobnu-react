/* tslint:disable */
/* eslint-disable */
/**
 * findjobnuAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Profile } from './Profile';
import {
    ProfileFromJSON,
    ProfileFromJSONTyped,
    ProfileToJSON,
    ProfileToJSONTyped,
} from './Profile';

/**
 * 
 * @export
 * @interface Experience
 */
export interface Experience {
    /**
     * 
     * @type {number}
     * @memberof Experience
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Experience
     */
    positionTitle?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Experience
     */
    company?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Experience
     */
    fromDate?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Experience
     */
    toDate?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Experience
     */
    duration?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Experience
     */
    location?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Experience
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Experience
     */
    linkedinUrl?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Experience
     */
    profileId?: number;
    /**
     * 
     * @type {Profile}
     * @memberof Experience
     */
    profile?: Profile;
}

/**
 * Check if a given object implements the Experience interface.
 */
export function instanceOfExperience(value: object): value is Experience {
    return true;
}

export function ExperienceFromJSON(json: any): Experience {
    return ExperienceFromJSONTyped(json, false);
}

export function ExperienceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Experience {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'positionTitle': json['positionTitle'] == null ? undefined : json['positionTitle'],
        'company': json['company'] == null ? undefined : json['company'],
        'fromDate': json['fromDate'] == null ? undefined : json['fromDate'],
        'toDate': json['toDate'] == null ? undefined : json['toDate'],
        'duration': json['duration'] == null ? undefined : json['duration'],
        'location': json['location'] == null ? undefined : json['location'],
        'description': json['description'] == null ? undefined : json['description'],
        'linkedinUrl': json['linkedinUrl'] == null ? undefined : json['linkedinUrl'],
        'profileId': json['profileId'] == null ? undefined : json['profileId'],
        'profile': json['profile'] == null ? undefined : ProfileFromJSON(json['profile']),
    };
}

export function ExperienceToJSON(json: any): Experience {
    return ExperienceToJSONTyped(json, false);
}

export function ExperienceToJSONTyped(value?: Experience | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'positionTitle': value['positionTitle'],
        'company': value['company'],
        'fromDate': value['fromDate'],
        'toDate': value['toDate'],
        'duration': value['duration'],
        'location': value['location'],
        'description': value['description'],
        'linkedinUrl': value['linkedinUrl'],
        'profileId': value['profileId'],
        'profile': ProfileToJSON(value['profile']),
    };
}

